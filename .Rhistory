rep_test <- compare_cor(r1 = rho_ori,
df1 = 19,
r2 = rho_rep,
df2 = 60.75)
rep_test
# Forest plot for anterior reach data ---------
## Labels for anterior forest plot -------------
labelanteriorrep <- "0.148 [0.03, 0.29]"
labelanteriorori <- "0.376 [0.03, 0.57]"
## Join datasets -----------------
anteriorplot <-
merge(ant_pes_ori_df, ant_pes_rep_df, by = c("eta", "etalow", "etahigh", "study_id"), all = TRUE)
## Plot -----------------------------
ggplot(anteriorplot,
aes(
y = study_id,
x = eta,
xmin = etalow,
xmax = etahigh
)) +
ggtitle("Partial eta squared [90% CI]") +
geom_point() +
geom_errorbarh(height = .1) +
geom_vline(
xintercept = 0,
color = 'black',
linetype = 'dashed',
alpha = .4
) +
theme_minimal() +
scale_x_continuous(name = "Observed Effect Size", limits = c(-0.1, 1)) +
scale_y_discrete(name = "") +
annotate("text",
x = 0.8,
y = 2,
label = labelanteriorrep) +
annotate("text",
x = 0.8,
y = 1,
label = labelanteriorori) +
theme(
axis.line.x = element_line(color = "black"),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 15),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.title = element_text(hjust = 0.85),
panel.background = element_blank()
)
ggsave(
"forestanterior.png",
plot = last_plot(),
device = "png",
width = NA,
height = NA,
dpi = 300,
limitsize = TRUE,
bg = '#ffffff'
)
View(ant_pes_ori)
View(ant_pes_ori_df)
View(ant_pes_rep_df)
# Load packages ----------------------------------------------------------------
library(afex)
library(emmeans)
library(pastecs)
library(reshape2)
library(tidyverse)
# Load *anterior* data --------------------------------------------------------------------
anterior_data <- read_csv("anterior_reach_data.csv")
head(anterior_data)
# Drop the "pre01" and "pre03" observation - original study only compared pre03 to post scores
anterior_data <- anterior_data %>%
select(-c("pre01", "pre02"))
# Prepare anterior data -------------------------------------------------------------------
# Convert data to long dataset
anterior_data.long <- anterior_data %>%
gather(key = "time", value = "score", pre03, post01, post02, post03)
head(anterior_data.long, 3)
# Add intervention column
anterior_data.long <- anterior_data.long %>%
mutate(intervention =  case_when(
time %in% c("pre03") ~ "pre_fatigue",
time %in% c("post01", "post02", "post03") ~ "post_fatigue"
))
structure(anterior_data.long)
# Convert categorical anterior_data to factors
anova_anterior_data <- anterior_data.long %>%
mutate(
participant = as.factor(participant),
time = as.factor(time),
intervention = as.factor(intervention),
score = as.numeric(score)
)
head(anova_anterior_data, 3)
# Assumptions - anterior ----------------------------------------------------------------------------
## Summary stats and normality test ------------------------------------------------------
stat.desc(anterior_data$pre03, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post01, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post02, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post03, basic = TRUE, norm = TRUE)
# Descriptives
summary_anterior_data <- anova_anterior_data %>%
group_by(time, intervention) %>%
summarise(mean = mean(score),
sd = sd(score))
## Plots ---------------------------------------------------------------------------
### Histogram -------------------
# Prepare anterior_data
anterior_hist_dat <- anterior_data %>%
select(pre03, post01, post02, post03)
anterior_hist_dat$id <- 1:nrow(anterior_hist_dat)
anterior_hist_dat <- melt(anterior_hist_dat, id.vars = "id")
# Plot histogram
hist <- ggplot(data = anterior_hist_dat, aes(x = value, fill = variable)) +
geom_histogram(color = "black", fill = "white",
bins = 15) +
facet_wrap( ~ variable) +
scale_x_continuous(name = "Y balance score")
hist
### Q-Q plots -------------------
ggplot(anterior_data, aes(sample = pre03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post01)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post02)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
### Boxplot -------------------
ggplot(anterior_data.long, aes(x = time, y = score)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = .2)
# Anterior ANOVA omnibus test ----------------------------------------------------------------------------
anterior_data_afx <- afex::aov_4(
score ~ time + (time | participant),
data = anova_anterior_data,
anova_table = list(correction = "GG", es = "pes")
) # using Greenhouse Geisser sphercity correction and partial eta squared
anterior_data_afx
summary(anterior_data_afx)
anterior_data_emm <- emmeans::emmeans(anterior_data_afx, ~ time, model = "multivariate")
# Anterior post hoc contrasts ----------------------------------------------------------------------------
posthocresults <- pairs(anterior_data_emm, adjust = "bon") %>%
broom::tidy(conf.int = T)
posthocresults
# Load *posteromedial* data --------------------------------------------------------------------
posteromed_data <- read_csv("postmed_reach_data.csv")
# Load packages ----------------------------------------------------------------
library(afex)
library(emmeans)
library(pastecs)
library(reshape2)
library(tidyverse)
# Load *anterior* data --------------------------------------------------------------------
anterior_data <- read_csv("anterior_reach_data.csv")
head(anterior_data)
# Drop the "pre01" and "pre03" observation - original study only compared pre03 to post scores
anterior_data <- anterior_data %>%
select(-c("pre01", "pre02"))
# Prepare anterior data -------------------------------------------------------------------
# Convert data to long dataset
anterior_data.long <- anterior_data %>%
gather(key = "time", value = "score", pre03, post01, post02, post03)
head(anterior_data.long, 3)
# Add intervention column
anterior_data.long <- anterior_data.long %>%
mutate(intervention =  case_when(
time %in% c("pre03") ~ "pre_fatigue",
time %in% c("post01", "post02", "post03") ~ "post_fatigue"
))
structure(anterior_data.long)
# Convert categorical anterior_data to factors
anova_anterior_data <- anterior_data.long %>%
mutate(
participant = as.factor(participant),
time = as.factor(time),
intervention = as.factor(intervention),
score = as.numeric(score)
)
head(anova_anterior_data, 3)
# Assumptions - anterior ----------------------------------------------------------------------------
## Summary stats and normality test ------------------------------------------------------
stat.desc(anterior_data$pre03, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post01, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post02, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post03, basic = TRUE, norm = TRUE)
# Descriptives
summary_anterior_data <- anova_anterior_data %>%
group_by(time, intervention) %>%
summarise(mean = mean(score),
sd = sd(score))
## Plots ---------------------------------------------------------------------------
### Histogram -------------------
# Prepare anterior_data
anterior_hist_dat <- anterior_data %>%
select(pre03, post01, post02, post03)
anterior_hist_dat$id <- 1:nrow(anterior_hist_dat)
anterior_hist_dat <- melt(anterior_hist_dat, id.vars = "id")
# Plot histogram
hist <- ggplot(data = anterior_hist_dat, aes(x = value, fill = variable)) +
geom_histogram(color = "black", fill = "white",
bins = 15) +
facet_wrap( ~ variable) +
scale_x_continuous(name = "Y balance score")
hist
### Q-Q plots -------------------
ggplot(anterior_data, aes(sample = pre03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post01)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post02)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
### Boxplot -------------------
ggplot(anterior_data.long, aes(x = time, y = score)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = .2)
# Anterior ANOVA omnibus test ----------------------------------------------------------------------------
anterior_data_afx <- afex::aov_4(
score ~ time + (time | participant),
data = anova_anterior_data,
anova_table = list(correction = "GG", es = "pes")
) # using Greenhouse Geisser sphercity correction and partial eta squared
anterior_data_afx
summary(anterior_data_afx)
anterior_data_emm <- emmeans::emmeans(anterior_data_afx, ~ time, model = "multivariate")
# Anterior post hoc contrasts ----------------------------------------------------------------------------
posthocresults <- pairs(anterior_data_emm, adjust = "bon") %>%
broom::tidy(conf.int = T)
posthocresults
# Load packages ----------------------------------------------------------------
library(afex)
library(emmeans)
library(pastecs)
library(reshape2)
library(tidyverse)
# Load *anterior* data --------------------------------------------------------------------
anterior_data <- read_csv("anterior_reach_data.csv")
head(anterior_data)
# Drop the "pre01" and "pre03" observation - original study only compared pre03 to post scores
anterior_data <- anterior_data %>%
select(-c("pre01", "pre02"))
# Prepare anterior data -------------------------------------------------------------------
# Convert data to long dataset
anterior_data.long <- anterior_data %>%
gather(key = "time", value = "score", pre03, post01, post02, post03)
head(anterior_data.long, 3)
# Add intervention column
anterior_data.long <- anterior_data.long %>%
mutate(intervention =  case_when(
time %in% c("pre03") ~ "pre_fatigue",
time %in% c("post01", "post02", "post03") ~ "post_fatigue"
))
structure(anterior_data.long)
# Convert categorical anterior_data to factors
anova_anterior_data <- anterior_data.long %>%
mutate(
participant = as.factor(participant),
time = as.factor(time),
intervention = as.factor(intervention),
score = as.numeric(score)
)
head(anova_anterior_data, 3)
# Assumptions - anterior ----------------------------------------------------------------------------
## Summary stats and normality test ------------------------------------------------------
stat.desc(anterior_data$pre03, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post01, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post02, basic = TRUE, norm = TRUE)
stat.desc(anterior_data$post03, basic = TRUE, norm = TRUE)
# Descriptives
summary_anterior_data <- anova_anterior_data %>%
group_by(time, intervention) %>%
summarise(mean = mean(score),
sd = sd(score))
## Plots ---------------------------------------------------------------------------
### Histogram -------------------
# Prepare anterior_data
anterior_hist_dat <- anterior_data %>%
select(pre03, post01, post02, post03)
anterior_hist_dat$id <- 1:nrow(anterior_hist_dat)
anterior_hist_dat <- melt(anterior_hist_dat, id.vars = "id")
# Plot histogram
hist <- ggplot(data = anterior_hist_dat, aes(x = value, fill = variable)) +
geom_histogram(color = "black", fill = "white",
bins = 15) +
facet_wrap( ~ variable) +
scale_x_continuous(name = "Y balance score")
hist
### Q-Q plots -------------------
ggplot(anterior_data, aes(sample = pre03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post01)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post02)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
ggplot(anterior_data, aes(sample = post03)) +
geom_qq() +
geom_qq_line() +
scale_x_continuous(name = "Observed Value") +
scale_y_continuous(name = "Expected Normal")
### Boxplot -------------------
ggplot(anterior_data.long, aes(x = time, y = score)) +
geom_violin(trim = FALSE) +
geom_boxplot(width = .2)
# Anterior ANOVA omnibus test ----------------------------------------------------------------------------
anterior_data_afx <- afex::aov_4(
score ~ time + (time | participant),
data = anova_anterior_data,
anova_table = list(correction = "GG", es = "pes")
) # using Greenhouse Geisser sphercity correction and partial eta squared
anterior_data_afx
summary(anterior_data_afx)
anterior_data_emm <- emmeans::emmeans(anterior_data_afx, ~ time, model = "multivariate")
# Anterior post hoc contrasts ----------------------------------------------------------------------------
posthocresults <- pairs(anterior_data_emm, adjust = "bon") %>%
broom::tidy(conf.int = T)
posthocresults
View(anterior_data_afx)
library(tidyverse)
library(afex)
library(emmeans)
library(stringr)
library(lmerTest)
# Import data ----
df_exp1 <- readxl::read_excel(here::here("data_CMJ.xlsx"),
sheet = "data_exp") |>
mutate(condition = "exp") |>
pivot_longer(cols = c(starts_with("pre"),
starts_with("post"))) |>
mutate(time = ifelse(str_detect(name,"pre"),"pre","post"))
df_con1 <- readxl::read_excel(here::here("data_CMJ.xlsx"),
sheet = "data_con") |>
mutate(condition = "con") |>
pivot_longer(cols = c(starts_with("pre"),
starts_with("post"))) |>
mutate(time = ifelse(str_detect(name,"pre"),"pre","post"))
df_all = bind_rows(df_exp1,df_con1)
df_sumall = df_all |>
group_by(id,time,condition) |>
summarize(avg = mean(value,na.rm=TRUE),
max = max(value,na.rm=TRUE),
.groups = 'drop')
df_wide = df_sumall |>
pivot_wider(names_from = time,
values_from = c(avg,max)) |>
mutate(avg_c = avg_pre - mean(avg_pre))
aov1 = aov_4(avg ~ time*condition + (condition+time|id),
data = df_sumall,
anova_table = list(es = "pes"))
View(aov1)
data_afx <- afex::aov_4(avg ~ time*condition + (condition+time|id),
data = df_sumall,
anova_table = list(correction = "GG", es = "pes")) # using Greenhouse Geisser sphercity correction and partial eta squared
data_afx
summary(data_afx)
data_emm <- emmeans::emmeans(data_afx, ~time, model = "multivariate")
data_emm <- emmeans::emmeans(data_afx, ~time, model = "multivariate")
data_emm
lmer2 = lmer(avg_post ~ avg_c + condition + (1|id),
data = df_wide)
em_ancova = emmeans(lmer2,
~ condition)
pairs_ancova = pairs(em_ancova)
View(pairs_ancova)
summary(pairs_ancova)
summary(em_ancova)
View(data_afx)
summary(data_afx)
View(data_afx)
pes_rep = aov1$anova_table$pes[1]
df_rep = aov1$anova_table$`den Df`[1]
pes_ori = 0.344
df_ori = 12
rho_ori = 2*sqrt(pes_ori)-1
rho_rep = 2*sqrt(pes_rep)-1
rep_test = TOSTER::compare_cor(r2 = rho_ori,
df2 = df_ori,
r1 = rho_rep,
df1 = df_rep)
rep_test
library(MOTE)
eta.F(dfm=1, dfe=12, Fvalue=6.289, a = 0.1)
eta.F(dfm=1, dfe=29, Fvalue=1.14, a = 0.1)
# Load packages ----------------------------------------------------------------
library(stats)
library(rstatix)
library(tidyverse)
# Load data --------------------------------------------------------------------
data <- read_csv("osi_balance.csv")
head(data)
# Prepare data ----------------
data <- data %>%
rename(code = "Code",
age = "Age",
bodymass = "Mass (kg)",
height = "Height (cm)",
osi_score = "Best OSI",
group = "Group Cat")
#Calculate descriptives for squat jump data-------------------------------------
summary <- data %>%
group_by(group) %>%
summarise(count = n(),
mean = mean(osi_score),
sd = sd(osi_score))
# Resolving assumptions  ------------------------------------
## Checking distribution ---------------------------------------
ggplot(data, aes(osi_score)) +
geom_histogram(color="black", fill="white",
bins = 10)
ggplot(data, aes(group, osi_score, color = group)) +
geom_boxplot(show.legend = FALSE) +
theme_minimal()
## Checking normality ------------------------------------------
data %>%
group_by(group) %>%
shapiro_test(osi_score)
## Variances ----------------------------------
var.test(osi_score ~ group, data)
# t test ---------------------------------------------------
t.test(osi_score ~ group, data,
var.equal = TRUE, alternative = "two.sided", paired = FALSE, conf.level = 0.95)
View(summary)
# Calculate ES ------
rep_ds <- d.ind.t(m1 = 0.492, m2=0.467, sd1=0.116, sd2=0.161, n1=12, n2=12, a = 0.05)
rep_ds
# Calculate ES ------
rep_ds <- d.ind.t(m1 = 0.492, m2=0.467, sd1=0.116, sd2=0.161, n1=12, n2=12, a = 0.05)
rep_ds
ori_ds <- 1.05 #reported
# Z-test --------
rep_test <- compare_smd(
smd1 = rep_ds$d,
n1 = 24,
smd2 = ori_ds,
n2 = 22,
paired = FALSE,
alternative = "two.sided")
rep_test
#Load packages
if(!require(BUCSS)){install.packages('BUCSS')}
library(BUCSS)
library(tinytex)
if(!require(MBESS)){install.packages('MBESS')}
library(MBESS)
library(MOTE)
library(effectsize)
library(pwr)
ori_pval <- 0.011
N <- 22
n <- 11
reported_es <- 1.05
pval = ori_pval/2 # for two-tailed
quantile = 1 - pval
tval <- qt(quantile, df = 20, lower.tail = FALSE)
tval <- abs(tval)
tval
#Calculating es and its CI
#INDEPENDENT SAMPLES - Calculating ds and its CI using t value
ds <- d.ind.t.t(t=tval, n1=n, n2=n, a = 0.05)
ds
# es does not match therefore will use reported es for calculations
#Calculating es and its CI
#INDEPENDENT SAMPLES - Calculating ds and its CI using t value
ds <- d.ind.t.t(t=tval, n1=n, n2=n, a = 0.05)
ds
dav <- d.dep.t.avg(m1 = 0.48, m2 = 0.69, sd1 = 0.16, sd2=0.19, n=11, a = 0.05)
dav
# es does not match therefore will use reported es for calculations
#Calculating es and its CI
#INDEPENDENT SAMPLES - Calculating ds and its CI using t value
ds <- d.ind.t.t(t=tval, n1=n, n2=n, a = 0.05)
ds
dav <- d.dep.t.avg(m1 = 0.48, m2 = 0.69, sd1 = 0.16, sd2=0.19, n=22, a = 0.05)
dav
# es does not match therefore will use reported es for calculations
